# -*-coding: utf-8 -*-
def simple_print():
    """Пример функции без параметроов"""
    print("Испытание функции simple_print(). Операция успешно выполнена")

def print_param(m):
    """Пример простейшей функции с параметром"""
    print("Вызвана функция, выводящая на экран следующее:\n",m)
def simple_sum(x,y):        #x, y - локальные переменные. Доступны только внутри функции
    """Пример простейшей функции с параметрами, возвращающей сумму двух чисел"""
    return x+y

m = input("Введите сообщение для функции: ")
while True:
    a = input("Первое слагаемое для функции: ")
    if not a.isdigit():
        print("Первое слагаемое должно быть целым числом")
        continue
    break
while True:
    b = input("Второе слагаемое для функции: ")
    if not b.isdigit():
        print("Второе слагаемое должно быть целым числом")
        continue
    break
a = int(a)      #Изначально a и b имеют тип str
b = int(b)      #Если не преобразовать, интерпретатор произведёт конкатенацию строк
print("Вызываем функцию simple_print() ")
simple_print()
print("Вызываем функцию print_param() ")
print_param(m)
print("Вызываем функцию simple_sum(x,y) ")
z = simple_sum(a,b)
print(z)
f = simple_sum      #Сохраняем ссылку на функцию в переменной
print("Проверяем выполнение функции simple_sum() после сохранения ссылки на неё в переменной:\n", f(a,b))

def func(fu, x, y):
    """Передадим в эту функцию в качестве первого параметра другую функцию"""
    return fu(x,y)
f2 = func(f,a,b)
print("Функция, первый параметр которой - наша функция simple_sum()\n", f2)
print("Атрибут __name__ к переменной f выводит:\n",f.__name__)
print("Документация для функции func выводится с помощью атрибута __doc__\n",func.__doc__)
