Модули и пакеты в Python

Модулем в языке Python называется любой файл с программным кодом
Модуль - это способ организации и переиспользования кода.
Пакеты - способ организации модулей.

Импорт из модуля:
	Если модуль находится в одном каталоге (директории) с исполняемым файлом:
	import <название_модуля>					# Для импорта всего модуля
	from <название_модуля> import <функция>		# Для импорта

!!! Есть функции, защищённые от wildcard-импорта (from module import *):
	Такие функции обозначены одним нижним подчёркиванием (_func())
	и называются приватными

Разбираемся с __pycache__
 - это прекомпилированные файлы Python
 * создаются при первом выполнении файла скрипта
 * необходимы для ускорения выполнения кода
 * пересоздаются при внесении изменений в файл скрипта .py

!!! НЕ РЕКОМЕНДУЕТСЯ эти файлы помещать в репозитории git!
!!! __pycache__ нужно прописывать в файле .ignore

[06:39] - Выполнение модуля как скрипта
	Каждый раз, когда импортируется модуль, выполняется код модуля.
	Как этого избежать?
	Можно использовать модуль, как исполняемый скрипт (выполняем сам модуль напрямую, как самостоятельный скрипт, 
	а не как импортированный)
	if __name__ == '__main__'
	(Проверяем, является модуль главной программой или импортированным модулем)
	__name__  - предопределённый атрибут, возвращающий имя модуля
	'__main__' - название модуля, присваемое атрибуту __name__ при прямом запуске модуля как основной программы

[12:00] Заглядываем внутрь модулей. Функция dir()

https://youtu.be/bTjvm7Zz2wU