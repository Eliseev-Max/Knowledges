# Убедиться, что установлен модуль venv
# (обычно установлен в стандартной конфигурации)
sudo apt install python3-venv


python3 -m venv <Имя_директории_с_виртуал._окружением>

# Активируем виртуальное окружение
source /venv/bin/activate
source ./bin/activate	# Если мы в директории venv
(▼*▼)

# Обновить pip
pip install -U pip 

# Установка модулей и пакетов
# "Черновой" вариант, если не планируется экспорт проекта:
pip install <название пакета>

	# Сохранить имеющиеся пакеты с версиями в отдельный файл requirements.txt
	pip freeze > requirements.txt	# Перенаправили вывод команды (stdout) в файл
	# Выводятся все зависимые модули и пакеты

# Установка пакетов из перечня requirements.txt

pip install -Ur requirements.txt


* Команда source часто используется для перезагрузки переменных окружения из файла.
  Эта команда позволяет выполнить скрипт в текущем процессе оболочки bash.
  По умолчанию для выполнения каждого скрипта запускается отдельная оболочка bash, хранящая все его переменные и функции.
  После завершения скрипта всё это удаляется вместе с оболочкой.
  Команда source позволяет выполнить скрипт в текущем командном интерпретаторе → 
  → всё переменные и функции, добавленные в этом скрипте,
    будут доступны также и в оболочке после его завершения.
  Синтаксис команды:
	$ source путь_к_файлу [аргументы]
	## Если указан не абсолютный путь к файлу, а просто имя файла,
	## то утилита будет искать исполняемый файл в текущей папке и директориях, указанных в переменной PATH. 
  
  Пример:
  $ vi losstsource				# создаём файл, содержащий переменную окружения
	WEBSITE=losst				# зададим переменную окружения
  
  $ source losstsource			# загрузим переменную из файла
  
  $ echo $WEBSITE				# выводим на экран переменную
  
  !!! СОЗДАННАЯ ПЕРЕМЕННАЯ ЕСТЬ ТОЛЬКО В ТЕКУЩЕМ КОМАНДНОМ ИНТЕРПРЕТАТОРЕ
  (В других командных интерпретаторах (других окнах bash) её нет)
  
  Команда source экспортирует переменную окружения локально
  Команда export экспортирует переменную окружения глобально
  
  