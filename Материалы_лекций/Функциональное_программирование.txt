Функциональное программирование
Чистая функция - это такая функция, которая зависит только от переданных в неё переменных
Сигнатура функции
Функция == Объект
func.__name__
func.__code__
func.__doc__

Проверить, вызывается ли функция:
if callable():
Если функция без return, то по умолчанию return None
Если просто print() без return, то функция возвращает Nonetype object
Избегать пустых переменных (которые используются только 1 раз)
Позиционные аргументы, затем именованные (b = 10) аргументы
#‼ Кстати, если в качестве аргументов передаёшь в функцию словарь, его ключи должны совпадать с именами аргументов))

*args - позиционные аргументы (неограниченно) -> tuple()
**kwargs - именованные аргументы -> dict()
Scopes
	Глобальные	global
	Локальные
	Нелокальные	nonlocal

(lambda x: x**2)(8) -> 64

Декоратор -> Передача имён ->
Паттерн "Корирование" (Caring)
Функция высшего порядка принимает другую ф-цию в качестве аргумента

zip, any, all - функции

functools -> lru_cache()
Крутая штука для чисел Фибоначи

itertools
