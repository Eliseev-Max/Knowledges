Selenium WebDriver - инструмент для автоматизации действий веб-браузера.
Применяется в большинстве случаев для тестирования Web-приложений, но этим не ограничивается.
В превую очередь это набор библиотек для разных ЯП.

Как работает Selenium:
Python Selenium -HTTP_request_with-[JSON Wire Protocol]-► Chrome Driver-► Google Chrome
Python Selenium -[JSON Wire Protocol]-► Gecko Driver-► Mozilla Firefox
Для работы с Selenium нужно скачать драйверы браузеров (если поддерживается).
ChromeDriver
GeckoDriver

Запустить драйвер = двойной щелчок по нему или
	для Ubuntu: [путь до файла]/chromedriver
				./chromedriver
Для всех языков программирование API Selenium-а одинаково (компнды, классы).

"Запустить браузер" (= "запустить драйвер") с точки зрения Selenium - это создать сессию.

	Инструмент для работы с браузером (драйвером) - Insomnia

Для создания сессии (обращения к браузеру) необходимо

	1. задать browserName с помощью JSON:
	{
		"capabilities": {
			"browserName": "chrome"
		}
	}

Среди множества полученных данных выбираем "sessionId":
Как передать id сессии:
	GET-запросом	http://localhost:9515/session/<id_сессии>/url
	POST-запрос		http://localhost:9515/session/<id_сессии>/url
		передаём JSON-файл
			{
				"url": "https://ya.ru"
			}
	Запросить title:
		http://localhost:9515/session/<id_сессии>/title

Удалить сессию (закрыть браузер):
	Метод DELETE
		запрос http://localhost:9515/session/<id_сессии>/

За запуск chromedriver отвечает сам ЯП.

При написании автотеста, предполагающего обращение к драйверу браузера (открытие браузера)
в конце теста в коде нужно написать финализатор: browser.quit()
	Пример:
	
	def test_title(browser):		# browser - фикстура из conftest.py
		time.sleep(2)
		browser.quit()
		
	В данном случае финализатор можно реализовать, используя:
		* request.addfinalizer()	в conftest.py	<- более отказоустойчиво
		* yield в цикле (генератор)

Важный момент: нужно убедиться, что для всех драйверов у нас есть права на чтение и ИСПОЛНЕНИЕ
Добавить права на исполнение:
	$ chmod u+x operadriver

#### Go to -► Declaration в PyCharm == Ctrl+B 	# Перейти к исходнику выбранного атрибута или метода

Тесты должны быть максимально изолированы друг от друга и от окружения