(https://www.jenkins.io/doc/book/pipeline/jenkinsfile/)
Использование Jenkinsfile

Наиболее полезные шаги, общие шаблоны и некоторые нетривиальные примеры Jenkinsfile

Преимущества Jenkinsfile, располагающегося в системе контроля версий:
	• возможность проверки кода и итераций в Pipeline
	• журнал аудита Pipeline
	• единый источник достоверной информации для Pipeline, который могут просматривать и редактировать несколько участников проекта
	
Pipeline поддерживает 2 синтаксиса: Декларативный и Скриптовый
Оба синтаксиса поддерживают Continuous Delivery (CD) - pipelines

Jenkinsfile — это текстовый файл, содержащий определение конвейера Jenkins и зарегистрированный в системе управления версиями.


Jenkinsfile (Declarative Pipeline)		# Минимально необходимая структура для реализации pipeline

pipeline {
    agent any						# выделяет исполнителя и рабочую область (workspace) в Pipeline

    stages {
        stage('Build') {
            steps {
                echo 'Building..'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}

	* директива agent:
		указывает, где будет выполняться весь pipeline или определенный этап (stage) в среде Jenkins 
		(зависит от того, где размещен раздел agent)
		ОБЯЗАТЕЛЬНО! agent определён на верхнем уровне внутри блока pipeline
		Произвольно: на уровне этапа (stage)
		По умолчанию директива агента гарантирует, что исходный репозиторий извлечен и доступен для шагов на последующих этапах.
	
	* директивы stages (stage) и steps также необходимы для корректного (валидного) составления Declarative Pipeline,
	  поскольку они указывают Jenkins-у, что выполнять и какой этап должен быть выполнен.
		



Настройка Pipeline с помещённым в SCM (Source Code Management, система контроля версий) Jenkinsfile
  * Jenkinsfile должен находиться в корне директории проекта
	Преднастройка Pipeline через классический пользовательский интерфейс Jenkins:
		1. Если необходимо, убедиться, что мы вошли в систему в Jenkins
		2. Домашняя страница Jenkins (Dashboard) → New Item
		3. Задать имя для своего Pipeline-проекта
		   (ВНИМАНИЕ! Jenkins использует заданное имя для создания директорий на диске.
		   Рекомендуется избегать использования пробелов в именах элементов, так как это может выявить ошибки в сценариях,
		   которые неправильно обрабатывают пробелы в путях к каталогам)
		4. Прокрутить вниз → кликнуть по пункту Pipeline → кликнуть по кнопке OK, чтобы перейти на страницу конфигурации Pipeline
		5. 