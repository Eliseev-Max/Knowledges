Sources:
1. Iptables Tutorial 1.2.2
[ https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html#MANGLETABLE ]

2. Утилита iptables в Ubuntu
[ https://tokmakov.msk.ru/blog/item/473 ]

Цепочки правил:

    • PREROUTING — правила в этой цепочке применяются ко всем пакетам, которые поступают на сетевой интерфейс извне
    • INPUT — применяются к пакетам, которые предназначаются для самого хоста или для процесса на данном хосте
    • FORWARD — правила, которые применяются к транзитным пакетам, проходящим через хост, не задерживаясь
    • OUTPUT — применяются к пакетам, которые сгенерированы самим хостом или процессами на данном хосте
    • POSTROUTING — применяются к пакетам, которые должны покинуть сетевой интерфейс данного хоста

Над цепочками правил в iptables есть еще один уровень абстракции — таблицы.
Таблицы предназначены для выполнения разных действий над пакетами, например для модификации или фильтрации:

    ♦ raw — предназначена для работы с сырыми пакетами, пока они еще не прошли обработку
    ♦ mangle — предназначена для модификации различных заголовков пакета
    ♦ nat — обеспечивает работу NAT, если сервер используется в качестве маршрутизатора
    ♦ filter — основная таблица для фильтрации пакетов, используется по умолчанию

Утилита iptables. Параметры работы с цепочками:
(Если таблица не указана, подразумевается таблица filter)
    -A (или --append) — добавить правило в цепочку
    -D (или --delete) — удалить правило из цепочки
    -I (или --insert) — вставить правило в цепочку под указанным номером
    -L (или --list) — вывести все правила для заданной цепочки
    -F (или --flush) — очистить все правила для заданной цепочки (таблицы)
    -N (или --new-chain) — создать новую цепочку
    -X (или --delete-chain) — удалить цепочку
    -P (или --policy) — установить действие по умолчанию для цепочки

  Дополнительные опции:
    -v (или --verbose) — увеличить подробность сообщений, при указании с командой --list будет выводиться имя интерфейса, параметры правил и маски TOS.
    -n (или --numeric) — выводить ip-адреса и номера портов в числовом виде, предотвращая попытки преобразовать их в символические имена.
    --line-numbers — показывать номера строк при отображении списка правил командой --list (номер строки соответствует позиции правила в цепочке). 

Действия с соединениями

    ACCEPT — пакет покидает данную цепочку и передается в следующую
    DROP — отбросить пакет, пакет не передается в следующую цепочку
    REJECT — отбросить пакет, сообщить отправителю пакета об ошибке
    SNAT — замена ip-адреса источника в пакете, в цепочках POSTROUTING и OUTPUT таблицы nat
    DNAT — замена ip-адреса назначения в пакете, в цепочке PREROUTING таблицы nat (изредка — в OUTPUT)
    LOG — записать пакет в лог-файл (отправляется демону syslog) и обработать остальными правилами
    MASQUERADE — как SNAT, но для соединений с динамическим ip-адресом, в цепочке POSTROUTING таблицы nat
    MARK — установить метку на пакет и обработать остальными правилами

Кратко о движении транзитных пакетов

	Таблица		Цепочка			Примечание
	mangle		PREROUTING		обычно цепочка (Ц.) для внесения изменений в заголовки пакета (изм. битов TOS)
	nat			PREROUTING		Ц. для трансляции сетевых адресов; source NAT выполняется позднее, в др. Ц.
	----------------------------------------------------------------------------------------------------------------
	Принятие решения о дальнейшей маршрутизации (куда пойдёт пакет: локальному приложению | на др. узел
	----------------------------------------------------------------------------------------------------------------
	mangle		FORWARD			Пакет → mangle.FORWARD
	filter		FORWARD			Здесь - фильтрация транзитного трафика. Трафик через эту Ц. - в обоих направлениях
	mangle		POSTROUTING		Внесение изменений в заголовок пакета после принятого решения о маршрутизации
	nat			POSTROUTING		Ц. в первую очередь для Sources NAT. Здесь же - Masquerading

Биты TOS (Type of Service) - набор из четырехбитных флагов в заголовке IP-пакета.
Каждый из четырех битов имеет различную цель, и только один из TOS-битов может быть установлен в один момент времени.
Установка любого бита = пакет может быть обработан маршрутизатором не так, как пакет со сброшенными битами TOS.
Доступные классы обслуживания сети:
	• Minimum delay (минимальная задержка)
	• Maximum throughput (максимальная пропускная способность)
	• Maximum reliability (максимальная надёжность)
	• Minimum cost (минимальная стоимость)

Таблица Mangle (Изменённые)

	- эта таблица в основном должна использоваться для изменения пакетов.
	Можно использовать цели mangle для изменения полей TOS (Type Of Service) и т.п.
Внимание!
	Настоятельно рекомендуется не использовать эту таблицу для какой-либо фильтрации; 
	ни DNAT, ни SNAT, ни Masquerading не будут работать в этой таблице.
Следующие цели допустимы только в таблице mangle. Их нельзя использовать вне таблицы mangle:
	• TOS
	• TTL
	• MARK
	• SECMARK
	• CONNSECMARK

Цель TOS используется для установки и/или изменения поля Type of Service в пакете.
Это можно использовать для настройки политик в сети относительно маршрутизации пакетов и так далее.
	! эта процедура не доведена до совершенства и на самом деле не реализована в Интернете.
	Большинство маршрутизаторов не заботятся о значении в этом поле, а иногда они ошибаются в том, что получают.
	Не рекомендуется устанавливать биты TOS это для пакетов, идущих в Интернет!
	Исключение: планируется принимать решения о маршрутизации с помощью iproute2.

Цель TTL используется для изменения поля TTL (Time To Live, время жизни) пакета.
Мы могли бы указать пакетам только определенный TTL и так далее.
Веская причина для этого: мы не хотим выдавать себя любопытным интернет-провайдерам.
(Некоторым интернет-провайдерам не нравятся пользователи, использующие несколько компьютеров через одно соединение, 
и есть некоторые интернет-провайдеры, которые, как известно, ищут один хост, генерирующий разные значения TTL, 
и воспринимают это как один из многих признаков того, что несколько компьютеров подключены к одному связь.)

Цель MARK 
используется для установки специальных значений меток для пакета.
Затем эти метки могут быть распознаны программами iproute2 для выполнения различной маршрутизации пакета в зависимости от того, какая метка у них есть или нет.
Мы также могли бы ограничить пропускную способность и организовать очередь на основе классов, основываясь на этих метках.

Цель SECMARK
    -может использоваться для установки меток контекста безопасности на отдельных пакетах для использования в SELinux и др. системах безопасности, способных обрабатывать эти метки.
Затем это используется для очень тонкой защиты того, какие подсистемы системы могут касаться каких пакетов и так далее. SECMARK также может быть установлен для всего соединения с целью CONNSECMARK.

CONNSECMARK
    - используется для копирования контекста безопасности в/из одного пакета из/во все соединение.
	Затем это используется SELinux и другими системами безопасности для обеспечения более тонкой защиты на уровне соединения.

Таблица Nat (NAT, преобразование сетевых адресов)
	
	Эта таблица должна использоваться только для NAT (трансляции сетевых адресов) для разных пакетов.
Другими словами, его следует использовать только для перевода поля источника или поля назначения пакета.
!!! Только первый пакет в потоке попадет в эту таблицу.
После этого над остальными пакетами автоматически будут выполняться те же действия, что и над первым пакетом.
Цели, которые выполняют такие действия:
	• DNAT
	• SNAT
	• MASQUERADE
	• REDIRECT

The DNAT target is mainly used in cases where you have a public IP and want to redirect accesses to the firewall to some other host (on a DMZ for example). In other words, we change the destination address of the packet and reroute it to the host.

SNAT is mainly used for changing the source address of packets. For the most part you'll hide your local networks or DMZ, etc. A very good example would be that of a firewall of which we know outside IP address, but need to substitute our local network's IP numbers with that of our firewall. With this target the firewall will automatically SNAT and De-SNAT the packets, hence making it possible to make connections from the LAN to the Internet. If your network uses 192.168.0.0/netmask for example, the packets would never get back from the Internet, because IANA has regulated these networks (among others) as private and only for use in isolated LANs.

The MASQUERADE target is used in exactly the same way as SNAT, but the MASQUERADE target takes a little bit more overhead to compute. The reason for this, is that each time that the MASQUERADE target gets hit by a packet, it automatically checks for the IP address to use, instead of doing as the SNAT target does - just using the single configured IP address. The MASQUERADE target makes it possible to work properly with Dynamic DHCP IP addresses that your ISP might provide for your PPP, PPPoE or SLIP connections to the Internet. 

Таблица Raw (Сырые данные)
The raw table is mainly only used for one thing, and that is to set a mark on packets that they should not be handled by the connection tracking system. This is done by using the NOTRACK target on the packet. If a connection is hit with the NOTRACK target, then conntrack will simply not track the connection. This has been impossible to solve without adding a new table, since none of the other tables are called until after conntrack has actually been run on the packets, and been added to the conntrack tables, or matched against an already available connection. You can read more about this in the The state machine chapter.

This table only has the PREROUTING and OUTPUT chains. No other chains are required since these are the only places that you can deal with packets before they actually hit the connection tracking.
Note!
	► For this table to work, the iptable_raw module must be loaded. It will be loaded automatically if iptables is run with the -t raw keywords, and if the module is available.
	► The raw table is a relatively new addition to iptables and the kernel. It might not be available in early 2.6 and 2.4 kernels unless patched.

Таблица filter
Filter table

The filter table is mainly used for filtering packets. We can match packets and filter them in whatever way we want. This is the place that we actually take action against packets and look at what they contain and DROP or /ACCEPT them, depending on their content. Of course we may also do prior filtering; however, this particular table is the place for which filtering was designed. Almost all targets are usable in this table. We will be more prolific about the filter table here; however you now know that this table is the right place to do your main filtering.

[https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html#USERTABLES]